shape = readOGR(dsn="/home/christopher/Documents/Juridico/General/EstadosShapefile/",layer="estadosl_2007")
# Merge shapefile with calculated variable
shape@data = merge(shape@data,dt,all.x = T,by.x='SIGLAUF3',by.y = 'uf')
# Plot values by region
my.palette = rev(colorRampPalette(brewer.pal(11,'RdYlBu'))(100))
setEPS()
postscript("~/Downloads/rec_uf.eps")
a = spplot(shape,'N', col.regions = my.palette, cuts = 99,main=list(label='Total de Reclamações por UF'))
print(a)
dev.off()
}
mapa_mun = function(dt){
shape_mun = readShapePoly("~/Downloads/municipios_2010/municipios_2010.shp")
shape_mun@data$nome = as.character(shape_mun@data$nome)
Encoding(shape_mun@data$nome) <- "latin1"
# Merge shapefile with calculated variable
shape_mun@data = merge(shape_mun@data,dt,all.x = T,by.x='nome',by.y = 'cidade')
# Plot values by region
setEPS()
postscript("~/Downloads/rec_mun.eps")
spplot(shape_mun,'N', col.regions = my.palette, cuts = 99,main=list(label='Total de Reclamações por Município'))
dev.off()
}
data[,.N,by=data_abertura_mes]
data[,.N,by=.(data_abertura_mes,nome_fantasia)]
data[,.N,by = .(uf,nome_fantasia)]
empresas = unique(data$nome_fantasia)
empresas
lapply(empresas,function(x)data[,.N,by = .(uf,nome_fantasia)][nome_fantasia == x])
lapply(empresas,function(x)data[,.N,by = .(uf,nome_fantasia)][nome_fantasia == x,.(uf,N)])
mapa_uf = function(dt,empresa){
###############################################################
# Read Brazil shapefile
shape = readOGR(dsn="/home/christopher/Documents/Juridico/General/EstadosShapefile/",layer="estadosl_2007")
# Merge shapefile with calculated variable
shape@data = merge(shape@data,dt,all.x = T,by.x='SIGLAUF3',by.y = 'uf')
# Plot values by region
my.palette = rev(colorRampPalette(brewer.pal(11,'RdYlBu'))(100))
setEPS()
postscript(paste0("~/Downloads/rec_uf_",empresa,".eps"))
a = spplot(shape,'N', col.regions = my.palette, cuts = 99,main=list(label=paste0('Total de Reclamações por UF - ',empresa)))
print(a)
dev.off()
}
mapa_mun = function(dt){
shape_mun = readShapePoly("~/Downloads/municipios_2010/municipios_2010.shp")
shape_mun@data$nome = as.character(shape_mun@data$nome)
Encoding(shape_mun@data$nome) <- "latin1"
# Merge shapefile with calculated variable
shape_mun@data = merge(shape_mun@data,dt,all.x = T,by.x='nome',by.y = 'cidade')
# Plot values by region
setEPS()
postscript("~/Downloads/rec_mun.eps")
spplot(shape_mun,'N', col.regions = my.palette, cuts = 99,main=list(label='Total de Reclamações por Município'))
dev.off()
}
lapply(empresas,function(x)mapa_uf(data[,.N,by = .(uf,nome_fantasia)][nome_fantasia == x,.(uf,N)],x))
View(data)
data[,lapply(.SD,function(x)length(unique(x))),.SDcols = c('nome_fantasia','area','assunto','grupo_problema','problema','situacao','avaliacao_reclamacao')]
data[,.N,by=.(data_abertura_mes,nome_fantasia)]
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia)) +  scale_x_date(date_breaks = "6 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
str(data)
data[,`:=`(data_abertura_mes =  as.Date(paste0(substr(data_abertura,1,8),'01'),format = '%d/%m/%Y'), data_resposta_mes =  as.Date(paste0(substr(data_resposta,1,8),'01'),format = '%d/%m/%Y'), data_finalizacao_mes =  as.Date(paste0(substr(data_finalizacao,1,8),'01'),format = '%d/%m/%Y'))]
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia)) +  scale_x_date(date_breaks = "6 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
data
data[,`:=`(data_abertura_mes =  as.Date(paste0(substr(data_abertura,1,8),'01')), data_resposta_mes =  as.Date(paste0(substr(data_resposta,1,8),'01')), data_finalizacao_mes =  as.Date(paste0(substr(data_finalizacao,1,8),'01')))]
data
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia)) +  scale_x_date(date_breaks = "6 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia)) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
?geom_line
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=2) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y")  + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='t') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
mapa_uf = function(dt,empresa){
###############################################################
# Read Brazil shapefile
shape = readOGR(dsn="/home/christopher/Documents/Juridico/General/EstadosShapefile/",layer="estadosl_2007")
# Merge shapefile with calculated variable
shape@data = merge(shape@data,dt,all.x = T,by.x='SIGLAUF3',by.y = 'uf')
# Plot values by region
my.palette = rev(colorRampPalette(brewer.pal(11,'RdYlBu'))(100))
setEPS()
postscript(paste0("~/Downloads/Vivo/rec_uf_",empresa,".eps"))
a = spplot(shape,'N', col.regions = my.palette, cuts = 99,main=list(label=paste0('Total de Reclamações por UF - ',empresa)))
print(a)
dev.off()
}
mapa_mun = function(dt,empresa){
shape_mun = readShapePoly("~/Downloads/municipios_2010/municipios_2010.shp")
shape_mun@data$nome = as.character(shape_mun@data$nome)
Encoding(shape_mun@data$nome) <- "latin1"
# Merge shapefile with calculated variable
shape_mun@data = merge(shape_mun@data,dt,all.x = T,by.x='nome',by.y = 'cidade')
# Plot values by region
setEPS()
postscript(paste0("~/Downloads/Vivo/rec_mun_",empresa,".eps"))
a = spplot(shape_mun,'N', col.regions = my.palette, cuts = 99,main=list(label=paste0('Total de Reclamações por Município - ',empresa)))
print(a)
dev.off()
}
ggsave('~/Downloads/Vivo/recs_data_abert.eps')
ggsave('~/Downloads/Vivo/recs_data_abert.eps',width = 5,height = 4)
ggsave('~/Downloads/Vivo/recs_data_abert.eps',width = 10,height = 4)
?ggsave
data[,tempo_resposta := data_resposta - data_abertura]
data
data[,tempo_resposta := as.numeric(data_resposta - data_abertura)]
data
ggplot(data,aes(x=nome_fantasia,y=tempo_respota)) + geom_boxplot(fill = 'gray80') + theme_bw()
ggplot(data,aes(x=nome_fantasia,y=tempo_resposta)) + geom_boxplot(fill = 'gray80') + theme_bw()
ggplot(data,aes(x=nome_fantasia,y=tempo_resposta)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_resposta),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta')
ggplot(data,aes(x=nome_fantasia,y=tempo_resposta)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_resposta,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta')
ggplot(data,aes(x=nome_fantasia,y=tempo_resposta)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_resposta,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta') + scale_y_continuous(breaks = seq(0,30,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_resposta)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_resposta,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta (em dias)') + scale_y_continuous(breaks = seq(0,30,5))
ggsave('~/Downloads/Vivo/box_respota_empresa.eps',width = 10,height = 4)
data[,lapply(.SD,function(x)length(unique(x))),.SDcols = c('nome_fantasia','area','assunto','grupo_problema','problema','situacao','avaliacao_reclamacao')]
str(data)
data
data[,.N],by=.(faixa_etaria,nome_fantasia)]
data[,.N,by=.(faixa_etaria,nome_fantasia)]
length(unique(data$faixa_etaria))
sort(unique(data$faixa_etaria))
data[,faixa_etaria := factor(faixa_etaria,levels = sort(unique(data$faixa_etaria)))]
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',aes(fill = nome_fantasia)) + theme_bw()
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + theme_bw()
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggsave('~/Downloads/Vivo/bar_rec_etaria.eps',width = 10,height = 5)
ggsave('~/Downloads/Vivo/bar_rec_etaria.eps',width = 12,height = 6)
data[,lapply(.SD,function(x)length(unique(x))),.SDcols = c('nome_fantasia','area','assunto','grupo_problema','problema','situacao','avaliacao_reclamacao')]
data[,.N,by=.(problema,nome_fantasia)]
ggplot(data[,.N,by=.(problema,nome_fantasia)],aes(x=problema,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia)
ggplot(data[,.N,by=.(problema,nome_fantasia)],aes(x=problema,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free')
ggplot(data[,.N,by=.(problema,nome_fantasia)],aes(x=problema,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free') + coord_flip()
ggplot(data[,.N,by=.(assunto,nome_fantasia)],aes(x=assunto,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free')
ggplot(data[,.N,by=.(assunto,nome_fantasia)],aes(x=assunto,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free') + coord_flip()
ggplot(data[,.N,by=.(assunto,nome_fantasia)],aes(y=assunto,x=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free')
unique(data$problema)
unique(data$grupo_problema)
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity')+ facet_wrap(~nome_fantasia,scales = 'free')
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamação') + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, -N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
tmp = data[,.N,by=.(grupo_problema,nome_fantasia)]
setorder(tmp,grupo_problema,N)
tmp
setorder(tmp,grupo_problema,-N)
ggplot(tmp,aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
setorder(tmp,-N,grupo_problema)
ggplot(tmp,aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
tmp
setorder(tmp,-N,nome_fantasia)
ggplot(tmp,aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
tmp
setorder(tmp,nome_fantasia,-N)
ggplot(tmp,aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
tmp
tmp[,grupo_problema:=factor(grupo_problema)]
ggplot(tmp,aes(x=grupo_problema,y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia,scales = 'free') + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 12,height = 6)
data[,.N,by=.(avaliacao_reclamacao,empresa)]
data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)]
ggplot(data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + theme_bw()
ggplot(data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa')+ xlab('Status Reclamação') + ylab('Quantidade de Reclamações') + theme_bw()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 17,height = 7)
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 17,height = 7)
ggplot(data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa')+ xlab('Status Reclamação') + ylab('Quantidade de Reclamações') + theme_bw()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 12,height = 6)
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 14,height = 7)
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 14,height = 7)
ggplot(data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa')+ xlab('Status Reclamação') + ylab('Quantidade de Reclamações') + theme_bw()
ggsave('~/Downloads/Vivo/bar_rec_status.eps',width = 12,height = 6)
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggsave('~/Downloads/Vivo/bar_rec_assunto.eps',width = 16,height = 8)
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.N,by=.(faixa_etaria,sexo,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + facet_wrap(~sexo) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.N,by=.(faixa_etaria,sexo,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + facet_wrap(~sexo) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw() + coord_flip()
ggsave('~/Downloads/Vivo/bar_rec_etaria_sexo.eps',width = 8,height = 8)
data[,trec_empresa := .N,by=.(nome_fantasia)]
data
data[,.N,by=.(data_abertura_mes,nome_fantasia)]
data[,.N/mean(trec_empresa),by=.(data_abertura_mes,nome_fantasia)]
data[,.(p = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)]
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)]
,aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[nome_fantasia!='Algar',.(N = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)]
,aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
data[,tempo_finalizacao := as.numeric(data_finalizacao - data_abertura)]
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_resposta,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta (em dias)') + scale_y_continuous(breaks = seq(0,30,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(fill = 'gray80') + geom_hline(yintercept = mean(data$tempo_finalizacao,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta (em dias)') + scale_y_continuous(breaks = seq(0,30,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(yintercept = mean(data$tempo_finalizacao,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Resposta (em dias)') + scale_y_continuous(breaks = seq(0,30,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(yintercept = mean(data$tempo_finalizacao,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,30,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(yintercept = mean(data$tempo_finalizacao,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)')
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(yintercept = mean(data$tempo_finalizacao,na.rm=T),colour = 'red') + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5))
data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao]
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(data = data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao],yintercept = media,aes(colour = avaliacao_reclamacao)) + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5))
?geom_hline
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(data = data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao],yintercept = media,aes(colour = avaliacao_reclamacao)) + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(data = data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao],aes(,yintercept = media,colour = avaliacao_reclamacao)) + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5))
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(data = data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao],aes(yintercept = media,colour = avaliacao_reclamacao)) + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5)) + scale_fill_brewer(palette = 'Set1') + scale_color_brewer(palette = 'Set1')
ggplot(data,aes(x=nome_fantasia,y=tempo_finalizacao)) + geom_boxplot(aes(fill = avaliacao_reclamacao)) + geom_hline(data = data[,.(media = mean(tempo_finalizacao)),by=avaliacao_reclamacao],aes(yintercept = media,colour = avaliacao_reclamacao)) + theme_bw() + xlab('Empresa') + ylab('Tempo de Finalização (em dias)') + scale_y_continuous(breaks = seq(0,50,5)) + scale_fill_brewer(palette = 'Set1',name = 'Status Reclamação') + scale_color_brewer(palette = 'Set1',name = 'Status Reclamação')
ggsave('~/Downloads/Vivo/box_finalizacao_empresa.eps',width = 10,height = 5)
data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_empresa]
data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia]
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x=nome_fantasia, y =satisfacao)) + geom_bar(fill='gray80') + theme_bw()
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x=nome_fantasia, y =satisfacao)) + geom_bar(stat = 'identity',fill='gray80') + theme_bw()
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x= reorder(nome_fantasia,satisfacao), y =satisfacao)) + geom_bar(stat = 'identity',fill='gray80') + theme_bw() + xlab('Empresa') + ylab('Índice de Satisfação')
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x= reorder(nome_fantasia,-satisfacao), y =satisfacao)) + geom_bar(stat = 'identity',fill='gray80') + theme_bw() + xlab('Empresa') + ylab('Índice de Satisfação')
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour(nome_fantasia),size=1)) + theme_bw() + xlab('') + ylab('Índice de Satisfação')
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia,size=1)) + theme_bw() + xlab('') + ylab('Índice de Satisfação')
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia),size=1) + theme_bw() + xlab('') + ylab('Índice de Satisfação')
data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)]
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia),size=1) + theme_bw() + xlab('') + ylab('Índice de Satisfação') +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y")
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia),size=1) + theme_bw() + xlab('') + ylab('Índice de Satisfação') +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia),size=1) + theme_bw() + xlab('') + ylab('Índice de Satisfação') +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black")) + scale_color_brewer(palette = 'Paired',name ='Empresas')
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x= reorder(nome_fantasia,-satisfacao), y =satisfacao)) + geom_bar(stat = 'identity',fill='gray80') + theme_bw() + xlab('Empresa') + ylab('Índice de Satisfação')
ggsave('~/Downloads/Vivo/ind_satisfacao.eps',width = 10,height = 5)
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=nome_fantasia],aes(x= reorder(nome_fantasia,-satisfacao), y =satisfacao)) + geom_bar(stat = 'identity',fill='gray80') + theme_bw() + xlab('Empresa') + ylab('Índice de Satisfação')
ggsave('~/Downloads/Vivo/ind_satisfacao.eps',width = 10,height = 5)
ggplot(data[,.(satisfacao = mean(nota_do_consumidor,na.rm = T)),by=.(data_finalizacao_mes,nome_fantasia)],aes(x= data_finalizacao_mes, y =satisfacao)) + geom_line(aes(colour=nome_fantasia),size=1) + theme_bw() + xlab('') + ylab('Índice de Satisfação') +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black")) + scale_color_brewer(palette = 'Paired',name ='Empresas')
ggsave('~/Downloads/Vivo/ind_satisfacao_data.eps',width = 10,height = 5)
ggplot(data[nome_fantasia!='Algar',.(N = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)] ,aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[nome_fantasia!='Algar',.(N = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)] ,aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.N,by=.(faixa_etaria,sexo,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + facet_wrap(~sexo) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw() + coord_flip()
ggplot(data[,.N,by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggplot(data[,.N,by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.(N = .N/media(trec_empresa)),by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Quantidade de Reclamações') + theme_bw()
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(labels = percent)
library(scales)
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(labels = percent)
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(breaks = seq(0,0.6,0.05),labels = percent)
ggsave('~/Downloads/Vivo/bar_prec_etaria.eps',width = 12,height = 6)
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,sexo,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + facet_wrap(~sexo) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(breaks = seq(0,0.6,0.05),labels = percent)
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(faixa_etaria,sexo,nome_fantasia)],aes(x = faixa_etaria,y=N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill = nome_fantasia)) + facet_wrap(~sexo) + scale_fill_brewer(palette = 'Paired',name = 'Empresa') + xlab('Faixa Etária') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(breaks = seq(0,0.6,0.05),labels = percent) + coord_flip()
ggsave('~/Downloads/Vivo/bar_prec_etaria_sexo.eps',width = 8,height = 8)
data[,.N,by=.(grupo_problema,nome_fantasia)]
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Quantidade de Reclamações') + coord_flip()
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(grupo_problema,nome_fantasia)],aes(x=reorder(grupo_problema, N),y=N)) + geom_bar(stat = 'identity', fill = 'gray80')+ facet_wrap(~nome_fantasia) + theme_bw() +xlab('Assunto') + ylab('Proporção de Reclamações') + scale_y_continuous(labels = percent) + coord_flip()
ggsave('~/Downloads/Vivo/bar_prec_assunto.eps',width = 16,height = 8)
data[,.N,by=.(avaliacao_reclamacao,nome_fantasia)]
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa')+ xlab('Status Reclamação') + ylab('Proporção de Reclamações') + theme_bw()
ggplot(data[,.(N = .N/mean(trec_empresa)),by=.(avaliacao_reclamacao,nome_fantasia)],aes(x = avaliacao_reclamacao, y = N)) + geom_bar(stat = 'identity',position = 'dodge',aes(fill=nome_fantasia)) + scale_fill_brewer(palette = 'Paired',name = 'Empresa')+ xlab('Status Reclamação') + ylab('Proporção de Reclamações') + theme_bw() + scale_y_continuous(labels = percent)
ggsave('~/Downloads/Vivo/bar_prec_status.eps',width = 12,height = 6)
cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])
cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])
corrplot(cor(data[!is.na(nota_do_consumidor),.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))]), method="ellipse")
cor(data[!is.na(nota_do_consumidor),.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])
data[!is.na(nota_do_consumidor),.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))]
data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))]
complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])
data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse")
cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])])
library(corrplot)
install.packages('corrplot')
library(corrplot)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse")
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'upper')
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower')
col<- colorRampPalette(c("red", "grey80", "blue"))(20)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
col<- colorRampPalette(c("red", "grey80", "darkblue"))(20)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
col<- colorRampPalette(c("red", "grey80", "blue"))(200)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
col<- colorRampPalette(c("red", "grey80", "blue"))(20)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
col<- colorRampPalette(c("red", "grey", "blue"))(20)
corrplot(cor(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",type = 'lower',col=col)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",col=col)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",col=brewer.pal(n=8, name="RdBu"))
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",col=col)
col = colorRampPalette(c("red", "grey", "blue"))(20)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))])]), method="ellipse",col=col)
col = colorRampPalette(c("red", "grey", "blue"))(20)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), method="ellipse",col=col)
dev.off()
setEPS()
postscript('~/Downloads/Vivo/correlation.eps')
col = colorRampPalette(c("red", "grey", "blue"))(20)
corrplot(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), method="ellipse",col=col)
dev.off()
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), method="ellipse",col=col)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
col = colorRampPalette(c("red", "grey", "blue"))(200)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
col = colorRampPalette(c("red", "white", "blue"))(200)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
col = colorRampPalette(c("red", "grey", "blue"))(200)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
col = colorRampPalette(c("red", "grey80", "blue"))(200)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
dev.off()
setEPS()
postscript('~/Downloads/Vivo/correlation.eps')
col = colorRampPalette(c("red", "grey80", "blue"))(200)
corrplot.mixed(cor(data[,.(rank = nota_do_consumidor,resposta = tempo_resposta,finalizacao = tempo_finalizacao, status = ifelse(avaliacao_reclamacao == 'Resolvida',1,0))][complete.cases(data[,.(nota_do_consumidor,tempo_resposta,tempo_finalizacao,avaliacao_reclamacao)])]), upper="ellipse",col=col)
dev.off()
ggplot(data[nome_fantasia!='Algar',.(N = .N/mean(trec_empresa)),by=.(data_abertura_mes,nome_fantasia)] ,aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggsave('~/Downloads/Vivo/precs_data_abert.eps',width = 10,height = 4)
ggplot(data[,.(N = mean(tempo_resposta)),by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data[,.(N = mean(tempo_resposta,na.rm=T)),by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Quantidade de Reclamações') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggsave('~/Downloads/Vivo/tempo_respota_data.eps',width = 10,height = 4)
ggplot(data[,.(N = mean(tempo_finalizacao,na.rm=T)),by=.(data_abertura_mes,nome_fantasia)],aes(x = data_abertura_mes, y = N)) + geom_line(aes(colour = nome_fantasia),size=1) +  scale_x_date(date_breaks = "1 month", date_labels = "%b/%Y") + scale_color_brewer(palette = 'Paired',name ='Empresas') + theme_bw() + xlab ('') + ylab('Tempo de Finalização (em dias)') + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.border = element_blank(), panel.grid = element_blank(), axis.line = element_line(colour = "black"))
ggsave('~/Downloads/Vivo/tempo_finalizacao_data.eps',width = 10,height = 4)
data[,(N=.N/mean(trec_empresa)),by = .(uf,nome_fantasia)]
lapply(empresas,function(x)mapa_uf(data[,.(N=.N/mean(trec_empresa)),by = .(uf,nome_fantasia)][nome_fantasia == x,.(uf,N)],x))
dev.off()
dev.off()
data[,.N,by = .(uf,nome_fantasia)]
data[,.N,by = .(uf,nome_fantasia)][,.(N/max(N)),by=.(nome_fantasia,uf)]
data[,.N,by = .(uf,nome_fantasia)][,.(N = N/max(N)),by=.(nome_fantasia,uf)]
data[,.N,by = .(uf,nome_fantasia)][,.(N = N/max(N)),by=.(nome_fantasia,uf)][order(N)]
data[,.N,by = .(uf,nome_fantasia)][,.(N = N/max(N)),by=.(nome_fantasia,uf)][order(-N)]
data[,.N,by = .(uf,nome_fantasia)]
data[,.N,by = .(uf,nome_fantasia)][,.(N = N/max(N)),by=.(nome_fantasia)][order(-N)]
data[,.N,by = .(uf,nome_fantasia)][,.(uf,N,N2 = N/max(N)),by=.(nome_fantasia)][order(-N)]
data[,.N,by = .(uf,nome_fantasia)][,.(uf,N,N2 = N/max(N)),by=.(nome_fantasia)][order(-N2)]
lapply(empresas,function(x)mapa_uf(data[,.N,by = .(uf,nome_fantasia)][,.(uf,N = N/max(N)),by=.(nome_fantasia)][nome_fantasia == x,.(uf,N)],x))
data[,.N,by = .(cidade,nome_fantasia)][,.(cidade,N = N/max(N)),by=.(nome_fantasia)]
gc()
lapply(empresas,function(x)mapa_uf(data[,.N,by = .(uf,nome_fantasia)][,.(uf,N = N/max(N)),by=.(nome_fantasia)][nome_fantasia == x,.(uf,N)],x))
# mapa_uf(data[,.N,by = uf])
# Libraries
###################################################
library(data.table)
library(geoR)
library(shapefiles)
library(maptools)
library(sp)
library(ggplot2)
library(plotrix)
library(rgdal)
library(MASS)
library(tseries)
library(lubridate)
library(zoo)
library(rgeos)
library(stringi)
library(parallel)
library(gdata)
###################################################
setwd('/home/christopher/Documents/Sense/Sense-Data-Science/heatmap_general/lib/')
source('./clients_info.R')
print('Preparing data ...')
# Define graphical variables
my.color = colorRampPalette(c("green", 'yellow',"red"))
my.color2 = colorRampPalette(c('cyan','green', 'yellow','orange',"red"))
# data = fread('/home/christopher/Downloads/claro1508_2908.txt',sep=',',na.strings = '')
# data = fread('/home/christopher/Downloads/claro1508_2908.txt',sep=',',na.strings = '')
data = fread('/home/christopher/Documents/Sense/HeatMaps/claro/dados/claro2109_21009.txt',sep=',',na.strings = '')
names(data) = c("id_sensor","rssi", "date_time", "id_campaign", "mac_address", "vendor","date_diaria","visit")
# Spark timestamp has a fixed .0 milisecond that is being removed
data[,date_time := as.POSIXct(stri_replace_all_fixed(date_time,'.0',''))]
data[,date_diaria := as.Date(date_diaria,format = '%Y-%m-%e')]
gc()
# RSSI mean
data = data[,.(rssi = mean(rssi)),by=.(id_sensor,mac_address,date_time,date_diaria,visit)]
# Date Diff in second
setorder(data,date_time)
data[,`:=`(data.max = max(date_time), data.min = min(date_time)),by=.(visit,mac_address,date_diaria)][,time.diff:=data.max-data.min]
# Mean signal by sensor
general.mean = data[,.(signal = mean(as.numeric(rssi),na.rm=T)),by=id_sensor]
# Mean time(in minutes) by sensor. Time will be counted only if the signal is strong enough, greater than or igual to -65
general.mean.time = data[rssi>=median(data$rssi),.(count = length(unique(mac_address)),time = mean(as.numeric(time.diff)/60, na.rm = T)),by=id_sensor]
# Merge info
general.mean = merge(general.mean, general.mean.time, all.x=T, by = 'id_sensor')
# Mean signal by sensor and date
data.per.sensor = data[,.(signal = mean(as.numeric(rssi), na.rm=T)),by=.(id_sensor,date_diaria)]
# Mean time by sensor and date
data.per.sensor.time = data[rssi>=median(data$rssi),.(count = length(unique(mac_address)),time = mean(as.numeric(time.diff)/60, na.rm = T)),by=.(id_sensor,date_diaria)]
# Merge info
data.per.sensor = merge(data.per.sensor, data.per.sensor.time, all.x=T, by = c('id_sensor','date_diaria'))
client = 'claro'
# Final dataset
general.mean = merge(general.mean,eval(parse(text = paste0('macs$',client,'[,.(id_sensor,x,y)]'))),all.x = T,by='id_sensor')
general.mean = general.mean[!is.na(x)]
general.mean[,`:=`(x=as.numeric(x),y=as.numeric(y))]
data.per.sensor = merge(data.per.sensor,eval(parse(text = paste0('macs$',client,'[,.(id_sensor,x,y)]'))),all.x = T,by='id_sensor')
data.per.sensor = data.per.sensor[!is.na(x)]
data.per.sensor[,`:=`(x=as.numeric(x),y=as.numeric(y))]
data = fread('/home/christopher/Documents/Sense/HeatMaps/claro/dados/claro2109_2109.txt',sep=',',na.strings = '')
names(data) = c("id_sensor","rssi", "date_time", "id_campaign", "mac_address", "vendor","date_diaria","visit")
# Spark timestamp has a fixed .0 milisecond that is being removed
data[,date_time := as.POSIXct(stri_replace_all_fixed(date_time,'.0',''))]
data[,date_diaria := as.Date(date_diaria,format = '%Y-%m-%e')]
gc()
# RSSI mean
data = data[,.(rssi = mean(rssi)),by=.(id_sensor,mac_address,date_time,date_diaria,visit)]
# Date Diff in second
setorder(data,date_time)
data[,`:=`(data.max = max(date_time), data.min = min(date_time)),by=.(visit,mac_address,date_diaria)][,time.diff:=data.max-data.min]
# Mean signal by sensor
general.mean = data[,.(signal = mean(as.numeric(rssi),na.rm=T)),by=id_sensor]
# Mean time(in minutes) by sensor. Time will be counted only if the signal is strong enough, greater than or igual to -65
general.mean.time = data[rssi>=median(data$rssi),.(count = length(unique(mac_address)),time = mean(as.numeric(time.diff)/60, na.rm = T)),by=id_sensor]
# Merge info
general.mean = merge(general.mean, general.mean.time, all.x=T, by = 'id_sensor')
# Mean signal by sensor and date
data.per.sensor = data[,.(signal = mean(as.numeric(rssi), na.rm=T)),by=.(id_sensor,date_diaria)]
# Mean time by sensor and date
data.per.sensor.time = data[rssi>=median(data$rssi),.(count = length(unique(mac_address)),time = mean(as.numeric(time.diff)/60, na.rm = T)),by=.(id_sensor,date_diaria)]
# Merge info
data.per.sensor = merge(data.per.sensor, data.per.sensor.time, all.x=T, by = c('id_sensor','date_diaria'))
client = 'claro'
# Final dataset
general.mean = merge(general.mean,eval(parse(text = paste0('macs$',client,'[,.(id_sensor,x,y)]'))),all.x = T,by='id_sensor')
general.mean = general.mean[!is.na(x)]
general.mean[,`:=`(x=as.numeric(x),y=as.numeric(y))]
data.per.sensor = merge(data.per.sensor,eval(parse(text = paste0('macs$',client,'[,.(id_sensor,x,y)]'))),all.x = T,by='id_sensor')
data.per.sensor = data.per.sensor[!is.na(x)]
data.per.sensor[,`:=`(x=as.numeric(x),y=as.numeric(y))]
load('/home/christopher/Documents/Sense/modelos_claro.RData')
dia = '2017-09-21'
client = 'claro'
geodata_density = list(coords = data.per.sensor[date_diaria == dia][,.(x,y)]/67.4, data = data.per.sensor[date_diaria == dia]$signal, borders = eval(parse(text = paste0('coords$',client)))/67.4)
class(geodata_density) = 'geodata'
geodata_time = list(coords = data.per.sensor[date_diaria == dia][,.(x,y)]/67.4, data = data.per.sensor[date_diaria == dia]$time, borders = eval(parse(text = paste0('coords$',client)))/67.4)
class(geodata_time) = 'geodata'
grid_length = c(80,80)
gr0 = expand.grid(seq(min(geodata_density$borders[,1]),max(geodata_density$borders[,1]), len=grid_length[1]),
seq(min(geodata_density$borders[,2]),max(geodata_density$borders[,2]), len=grid_length[2]))
gr = locations.inside(gr0, geodata_density$borders)
kc_density = krige.conv(geodata_density, loc=gr0,krige=krige.control(obj.model=model_density$model$m19),output=output.control(n.predictive=500))
kc_time = krige.conv(geodata_time, loc=gr0,krige=krige.control(obj.model=model_time$model$m19),output=output.control(n.predictive=500))
############################################################################################
#                                             Heatmap Plot
############################################################################################
png(paste0('/home/christopher/Documents/Sense/HeatMaps/',client,'/mapas/',dia,'.png'),units = 'px', width = 1000, height = 1000,res=96)
par(mar = rep(0, 4))
image(kc_density,col=my.color2(100),xlab = '',ylab='',main='',axes=T,ylim=c(-2,18))
plot(eval(parse(text = paste0('area_sp$',client))), add = T)
with(eval(parse(text = paste0('labels$',client))),text(x, y, de_para, cex = 1,srt=-90,family = 'Roboto'))
with(eval(parse(text = paste0('labels$',client))),text(leg.x, leg.y, text, cex = 1,srt=-90,family = 'Roboto',adj=0))
dev.off()
png(paste0('/home/christopher/Documents/Sense/HeatMaps/',client,'/mapas/',gsub('-','_',dia),'.png'),units = 'px', width = 1000, height = 1000,res=96)
par(mar = rep(0, 4))
image(kc_time,col=my.color2(100),xlab = '',ylab='',main='',axes=T,ylim=c(-2,18))
plot(eval(parse(text = paste0('area_sp$',client))), add = T)
with(eval(parse(text = paste0('labels$',client))),text(x, y, de_para, cex = 1,srt=-90,family = 'Roboto'))
with(eval(parse(text = paste0('labels$',client))),text(leg.x, leg.y, text, cex = 1,srt=-90,family = 'Roboto',adj=0))
dev.off()
felipe = fread('/home/christopher/Downloads/trt4-consolidated.csv',sep='|')
felipe = read.table('/home/christopher/Downloads/trt4-consolidated.csv',sep='|')
felipe = read.table('/home/christopher/Downloads/trt4-ingestao.csv',sep='|')
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|')
felipe
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|')
felipe
unique(felipe,by = key(felipe))
key(felipe)
setkey(felipe)
unique(felipe,by = key(felipe))
unique(felipe)
uniqueN(felipe)
unique(as.data.frame(felipe))
tmp = as.data.table(unique(as.data.frame(felipe)))
tmp
ncol(felipe)
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|',colClasses = rep('character',43))
felipe
setkey(felipe,numeroProcessoLimpo)
unique(felipe)
unique(felipe,by=numeroProcessoLimpo)
unique(felipe,by='numeroProcessoLimpo')
write.table(unique(felipe,by='numeroProcessoLimpo'),'/home/christopher/Downloads/felipe_limpo.txt',row.names = F,sep='|',quote = F)
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|',colClasses = rep('character',43))
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|')
felipe
ncol(felipe)
felipe = fread('/home/christopher/Downloads/trt4-ingestao.csv',sep='|',colClasses = rep('character',45))
setkey(felipe,numeroProcessoLimpo)
unique(felipe,by='numeroProcessoLimpo')
write.table(unique(felipe,by='numeroProcessoLimpo'),'/home/christopher/Downloads/felipe_limpo.txt',row.names = F,sep='|',quote = F)
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo.csv',sep='|',colClasses = rep('character',45))
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo.csv',sep='|')
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo.csv',sep='|',colClasses = rep('character',44))
setkey(felipe,numeroProcessoLimpo)
write.table(unique(felipe,by='numeroProcessoLimpo'),'/home/christopher/Downloads/kaio_limpo.txt',row.names = F,sep='|',quote = F)
unique(felipe,by='numeroProcessoLimpo')
felipe
tmp[nomeParteAdversa == 'Anderson Marvel Braz']
felipe[nomeParteAdversa == 'Anderson Marvel Braz']
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo (1).csv',sep='|',colClasses = rep('character',44))
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo (1).csv',sep='|')
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo (1).csv',sep='|',colClasses = rep('character',45))
setkey(felipe,numeroProcessoLimpo)
felipe
unique(felipe,by='numeroProcessoLimpo')
write.table(unique(felipe,by='numeroProcessoLimpo'),'/home/christopher/Downloads/kaio_limpo.txt',row.names = F,sep='|',quote = F)
felipe[nomeParteAdversa == 'Christiane Kanashi Asana']
felipe = fread('/home/christopher/Downloads/trt4-ingestao-novo (2).csv',sep='|',colClasses = rep('character',45))
setkey(felipe,numeroProcessoLimpo)
write.table(unique(felipe,by='numeroProcessoLimpo'),'/home/christopher/Downloads/kaio_limpo.txt',row.names = F,sep='|',quote = F)
felipe
unique(felipe,by='numeroProcessoLimpo')
felipe[nomeParteAdversa == 'Christiane Kanashi Asana']
rm(list = ls())
gc()
gc()
